package org.evosuite.ga.operators.crossover;

import org.evosuite.Properties;
import org.evosuite.ga.ConstructionFailedException;
import org.evosuite.testcase.AbstractTestChromosome;
import org.evosuite.utils.GenerationLogger;
import org.evosuite.utils.Randomness;

/**
 * Implement crash point crossover.
 * The crossover point is determined by the point where the test execution stopped. If a test did not stop its execution, a random point is selected.
 *
 * @author Emanuele Iannone
 */
public class CrashPointCrossOver<T extends AbstractTestChromosome<T>> extends CrossOverFunction<T> {
    private static final GenerationLogger GENERATION_LOGGER = new GenerationLogger(Properties.GENERATION_LOG_FILE);

    @Override
    public void crossOver(T parent1, T parent2) throws ConstructionFailedException {
        if (parent1.size() < 2 || parent2.size() < 2) {
            return;
        }
        Integer parent1CrashPoint = parent1.getLastExecutionResult().getFirstPositionOfThrownException();
        Integer parent2CrashPoint = parent2.getLastExecutionResult().getFirstPositionOfThrownException();
        //GENERATION_LOGGER.write(String.format("PARENT 1 Code:\n%s", GenerationLoggerHelper.testCaseToString(parent1.getTestCase(), 15)));
        //GENERATION_LOGGER.write(String.format("PARENT 2 Code:\n%s", GenerationLoggerHelper.testCaseToString(parent2.getTestCase(), 15)));
        //GENERATION_LOGGER.write(String.format("PARENT 1 crashed at: %s", parent1CrashPoint));
        //GENERATION_LOGGER.write(String.format("PARENT 2 crashed at: %s", parent2CrashPoint));
        int parent1Point = parent1CrashPoint != null ? parent1CrashPoint : Randomness.nextInt(parent1.size() - 1) + 1;
        int parent2Point = parent2CrashPoint != null ? parent2CrashPoint : Randomness.nextInt(parent2.size() - 1) + 1;
        T p1 = parent1.clone();
        parent1.crossOver(parent2.clone(), parent1Point, parent2Point);
        parent2.crossOver(p1, parent2Point, parent1Point);
        //GENERATION_LOGGER.write(String.format("PARENT 1 New Code:\n%s", GenerationLoggerHelper.testCaseToString(parent1.getTestCase(), 15)));
        //GENERATION_LOGGER.write(String.format("PARENT 2 New Code:\n%s", GenerationLoggerHelper.testCaseToString(parent2.getTestCase(), 15)));
    }
}
