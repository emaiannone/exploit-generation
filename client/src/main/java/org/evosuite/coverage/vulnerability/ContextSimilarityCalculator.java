package org.evosuite.coverage.vulnerability;

import org.evosuite.setup.Call;
import org.evosuite.setup.CallContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Iterator;

/**
 * Helper class that computes the context similarity of a call context in respect to a target call context.
 * The context similarity is the number of matched method calls divided the total number of methods in the target.
 */
class ContextSimilarityCalculator {
    /**
     * The list of method calls to check the similarity for
     */
    private final CallContext callContext;
    /**
     * The list of method calls used as a reference
     */
    private final CallContext targetContext;
    protected static final Logger logger = LoggerFactory.getLogger(ContextSimilarityCalculator.class);

    ContextSimilarityCalculator(CallContext callContext, CallContext targetContext) {
        this.callContext = callContext;
        this.targetContext = targetContext;
    }

    /**
     * Computes the context similarity of a call context in respect to a target call context given to object's fields.
     * The context similarity is the number of matched method calls divided the total number of methods in the target.
     *
     * @return a value between 0 and 1. The bigger, the greater the number of matched with 1 meaning perfect match.
     */
    double compute() {
        Iterator<Call> currentIter = callContext.getContext().iterator();
        Iterator<Call> targetIter = targetContext.getContext().iterator();
        int matchNum = 0;
        boolean matched = true;
        while (matched && currentIter.hasNext() && targetIter.hasNext()) {
            Call currentCall = currentIter.next();
            Call targetCall = targetIter.next();
            matched = currentCall.equals(targetCall);
            if (matched) {
                matchNum++;
            }
        }
        double contextSimilarity = (double) matchNum / targetContext.getContext().size();
        logger.debug("\t{} / {} = {} of {}", matchNum, targetContext.getContext().size(), contextSimilarity, callContext);
        return contextSimilarity;
    }
}
