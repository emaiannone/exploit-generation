package org.evosuite.coverage.vulnerability;

import org.evosuite.graphs.cfg.ControlDependency;
import org.evosuite.setup.CallContext;

import java.io.Serializable;
import java.util.List;

public class VulnerabilityCoverageGoal implements Serializable {
    private final int id;
    private final CallContext targetContext;
    // To avoid an RMI exception (due to a ClassLoader object inside the entire structure), this field has been made transient.
    // An alternative would be put transient keyword into the ClassLoader field in ByteCodeInstruction and BasicBlock classes.
    // Other solutions are well accepted
    private final transient List<ControlDependency> targetControlNodes;
    private final int targetLine;

    public VulnerabilityCoverageGoal(int id, CallContext targetContext, List<ControlDependency> targetControlNodes, int targetLine) {
        this.id = id;
        if (targetContext == null || targetControlNodes == null || targetLine == 0) {
            throw new IllegalArgumentException("Invalid target call context, control nodes or line");
        }
        this.targetContext = targetContext;
        this.targetControlNodes = targetControlNodes;
        this.targetLine = targetLine;
    }

    public int getId() {
        return id;
    }

    public CallContext getTargetContext() {
        return targetContext;
    }

    public List<ControlDependency> getTargetControlNodes() {
        return targetControlNodes;
    }

    public int getTargetLine() {
        return targetLine;
    }

    @Override
    public String toString() {
        return "VulnerabilityGoal{" +
                "targetContext=" + targetContext +
                ", targetControlNodes='" + targetControlNodes + '\'' +
                ", targetLine=" + targetLine +
                '}';
    }
}
