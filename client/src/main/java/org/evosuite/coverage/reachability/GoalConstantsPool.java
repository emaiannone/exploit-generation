package org.evosuite.coverage.reachability;

import org.evosuite.seeding.StaticConstantPool;

import java.util.LinkedHashMap;
import java.util.Map;

public class GoalConstantsPool {
    private static Map<String, Map<String, StaticConstantPool>> goalMethodPools = new LinkedHashMap<>();

    public static void add(String className, String methodName, Object object) {
        Map<String, StaticConstantPool> classConstants = goalMethodPools.get(className);
        if (classConstants == null) {
            Map<String, StaticConstantPool> newClassConstants = new LinkedHashMap<>();
            StaticConstantPool newMethodConstants = new StaticConstantPool();
            newMethodConstants.add(object);
            newClassConstants.put(methodName, newMethodConstants);
            goalMethodPools.put(className, newClassConstants);
        } else {
            StaticConstantPool methodConstants = classConstants.get(methodName);
            if (methodConstants != null) {
                methodConstants.add(object);
            } else {
                StaticConstantPool newMethodConstants = new StaticConstantPool();
                newMethodConstants.add(object);
                classConstants.put(methodName, newMethodConstants);
            }
        }
    }

    public static StaticConstantPool getGoalConstantPool() {
        StaticConstantPool fullPool = new StaticConstantPool();
        for (Map<String, StaticConstantPool> classPools : goalMethodPools.values()) {
            for (StaticConstantPool pool : classPools.values()) {
                pool.getObjects().forEach(fullPool::add);
            }
        }
        return fullPool;
    }

    public static void reset() {
        goalMethodPools = new LinkedHashMap<>();
    }
}
