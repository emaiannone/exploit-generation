package com.examples.with.different.packagename.artificial.nifi;

import org.apache.nifi.cluster.coordination.http.replication.okhttp.OkHttpReplicationClient;
import org.apache.nifi.util.NiFiProperties;

import javax.ws.rs.HttpMethod;
import java.util.HashMap;
import java.util.Properties;
import java.util.Set;

public class NifiCallerFlexible {

    private OkHttpReplicationClient ok;
    private boolean flag;

    public NifiCallerFlexible(boolean flag) {
        Properties properties = new Properties();
        NiFiProperties niFiProperties = new NiFiProperties() {
            @Override
            public String getProperty(String key) {
                return properties.getProperty(key);
            }

            @Override
            public Set<String> getPropertyKeys() {
                return properties.stringPropertyNames();
            }
        };
        this.ok = new OkHttpReplicationClient(niFiProperties);
        this.flag = flag;
    }

    public void call() {
        if (flag) {
            HashMap<String, String> headers = new HashMap<>();
            headers.put("Content-Length", "10");
            ok.prepareRequest(HttpMethod.DELETE, headers, null);
        } else {
            System.out.println(ok);
        }
    }

}
