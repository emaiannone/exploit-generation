%Entries
@misc{open_source,
    title = {Open source security analysis: The state of open source security in commercial applications},
    author = {Mike Pittenger},
    year = {2020},
    url = {https://info.blackducksoftware.com/rs/872-OLS-526/images/OSSAReportFINAL.pdf},
    note = {Black Duck Software, Tech. Rep.},
    urldate = {2020-03-10}
}

@misc{nvd,
    title = {National Vulnerability Database},
    author = {NIST},
    year = {2020},
    url = {https://nvd.nist.gov/},
    urldate = {2020-03-10}
}

@misc{owasp_dc,
    author = {OWASP},
    title = {OWASP Dependency Check},
    year = {2020},
    url = {https://owasp.org/www-project-dependency-check/},
    urldate = {2020-06-15},
}

@misc{whitesource,
    author = {Whitesource Software},
    title = {Whitesource},
    year = {2020},
    url = {https://www.whitesourcesoftware.com/oss_security_vulnerabilities/},
    urldate = {2020-06-15},
}

@misc{spotbugs,
    author = {Spot Bugs},
    title = {Spot Bugs},
    year = {2020},
    url = {https://spotbugs.github.io/},
    urldate = {2020-06-15},
}

@misc{sonar,
    author = {SonarQube},
    title = {Static Application Security Testing},
    year = {2020},
    url = {https://www.sonarqube.org/features/security/},
    urldate = {2020-06-15},
}

@inproceedings{ponta2018icsme_beyond,
    author = {Serena Elisa Ponta and Henrik Plate and Antonino Sabetta},
    booktitle = {2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
    title = {Beyond Metadata: Code-centric and Usage-based Analysis of Known Vulnerabilities in Open-source Software},
    year = {2018},
    month = {Sept},
}

@article{kula2017ese_updates,
    author = {Kula, Raula and German, Daniel and Ouni, Ali and Ishio, Takashi and Inoue, Katsuro},
    year = {2017},
    month = {05},
    pages = {1-34},
    title = {Do developers update their library dependencies?},
    journal = {Empirical Software Engineering},
    doi = {10.1007/s10664-017-9521-5}
}

@inproceedings{landman2017_reflection,
    author = {D. {Landman} and A. {Serebrenik} and J. J. {Vinju}},
    booktitle = {2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE)},
    title = {Challenges for Static Analysis of Java Reflection - Literature Review and Empirical Study},
    year = {2017},
    pages = {507-518},
    keywords = {application program interfaces;computational linguistics;Java;program diagnostics;public domain software;software tools;source code (software);trees (mathematics);static analysis tool;Java Reflection API;literature review;software behavior;real-world Java code analysis;Java projects;reflective Java code;Java systems;collected descriptive statistics;abstract syntax trees;source code;code idioms;nonexceptional exceptions;programmatic filtering meta objects;dynamic proxies;collections semantics;reflection code analysis;Java;Tools;Bibliographies;Grammar;Software;Systematics;Semantics;Java;Reflection;Static Analysis;Systematic Literature Review;Empirical Study},
    doi = {10.1109/ICSE.2017.53},
    ISSN = {1558-1225},
    month = {May}
}

@article{jan2019_xmli,
    author = {Jan, Sadeeq and Panichella, Annibale and Arcuri, Andrea and Briand, Lionel},
    year = {2019},
    month = {04},
    title = {Search-based Multi-Vulnerability Testing of XML Injections in Web Applications},
    journal = {Empirical Software Engineering},
    doi = {10.1007/s10664-019-09707-8}
}

@article{fraser2013_evosuite,
    author = {G. {Fraser} and A. {Arcuri}},
    journal = {IEEE Transactions on Software Engineering},
    title = {Whole Test Suite Generation},
    year = {2013},
    volume = {39},
    number = {2},
    pages = {276-291},
    keywords = {formal specification;program debugging;program testing;whole test suite generation;program crashes;formal specification;software testing;code coverage;EvoSuite tool;program debugging;Software;Genetic algorithms;Search problems;Arrays;Genetic programming;Software testing;Search-based software engineering;length;branch coverage;genetic algorithm;infeasible goal;collateral coverage},
    doi = {10.1109/TSE.2012.14},
    ISSN = {2326-3881},
    month = {Feb}
}

@inproceedings{ponta2019msr_dataset,
    author = {Ponta, Serena and Plate, Henrik and Sabetta, Antonino and Bezzi, Michele and Dangremont, Cédric},
    year = {2019},
    month = {02},
    title = {A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software}
}

@article{anand2013jss_survey,
    author = {Anand, Saswat and Burke, Edmund K. and Chen, Tsong Yueh and Clark, John and Cohen, Myra B. and Grieskamp, Wolfgang and Harman, Mark and Harrold, Mary Jean and Mcminn, Phil},
    title = {An Orchestrated Survey of Methodologies for Automated Software Test Case Generation},
    year = {2013},
    issue_date = {August 2013},
    publisher = {Elsevier Science Inc.},
    address = {USA},
    volume = {86},
    number = {8},
    issn = {0164-1212},
    url = {https://doi.org/10.1016/j.jss.2013.02.061},
    doi = {10.1016/j.jss.2013.02.061},
    journal = {J. Syst. Softw.},
    month = {aug},
    pages = {1978–2001},
    numpages = {24},
    keywords = {Symbolic execution, Search-based software testing, Adaptive random testing, Test case generation, Test automation, Model-based testing, Software testing, Combinatorial testing, Orchestrated survey}
}

@inbook{deb2005moo,
    author = {Deb, Kalyanmoy},
    editor = {Burke, Edmund K. and Kendall, Graham},
    title = {Multi-Objective Optimization},
    bookTitle = {Search Methodologies: Introductory Tutorials in Optimization and Decision Support Techniques},
    year = {2005},
    publisher = {Springer US},
    address = {Boston, MA},
    pages = {273--316},
    abstract = {Many real-world search and optimization problems are naturally posed as non-linear programming problems having multiple objectives. Due to the lack of suitable solution techniques, such problems were artificially converted into a single-objective problem and solved. The difficulty arose because such problems give rise to a set of trade-off optimal solutions (known as Pareto-optimal solutions), instead of a single optimum solution. It then becomes important to find not just one Pareto-optimal solution, but as many of them as possible. This is because any two such solutions constitutes a trade-off among the objectives and users would be in a better position to make a choice when many such trade-off solutions are unveiled.},
    isbn = {978-0-387-28356-2},
    doi = {10.1007/0-387-28356-0_10},
    url = {https://doi.org/10.1007/0-387-28356-0_10}
}

@article{panichella2018tse_dynamosa,
    author = {Panichella, Annibale and Kifetew, Fitsum Meshesha and Tonella, Paolo},
    year = {2018},
    month = {02},
    pages = {122-158},
    title = {Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets},
    volume = {44},
    journal = {IEEE Transactions on Software Engineering},
    doi = {10.1109/TSE.2017.2663435}
}

@inproceedings{panichella2015icst_mosa,
    author = {Panichella, Annibale and Kifetew, Fitsum Meshesha and Tonella, Paolo},
    year = {2015},
    month = {04},
    title = {Reformulating Branch Coverage as a Many-Objective Optimization Problem},
    journal = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
    doi = {10.1109/ICST.2015.7102604}
}

@article{arcuri2017lncs_mio,
    title={Many Independent Objective (MIO) Algorithm for Test Suite Generation},
    ISBN={9783319662992},
    ISSN={1611-3349},
    url={http://dx.doi.org/10.1007/978-3-319-66299-2_1},
    DOI={10.1007/978-3-319-66299-2_1},
    journal={Lecture Notes in Computer Science},
    publisher={Springer International Publishing},
    author={Arcuri, Andrea},
    year={2017},
    pages={3–17}
}

@inproceedings{spadini2018esecfse_pydriller,
    address = {New York, New York, USA},
    author = {Spadini, Davide and Aniche, Maur\'{i}cio and Bacchelli, Alberto},
    booktitle = {Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering - ESEC/FSE 2018},
    doi = {10.1145/3236024.3264598},
    isbn = {9781450355735},
    keywords = {2018,acm reference format,and alberto bacchelli,davide spadini,git,gitpython,maur\'{i}cio aniche,mining software repositories,pydriller,python},
    pages = {908--911},
    publisher = {ACM Press},
    title = {{PyDriller: Python framework for mining software repositories}},
    url = {http://dl.acm.org/citation.cfm?doid=3236024.3264598},
    year = {2018}
}
