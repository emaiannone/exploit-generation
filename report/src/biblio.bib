%Entries
@inproceedings{collections,
    author = {Hasan, Samir and King, Zachary and Munawar, Hafiz Suliman and Sayagh, Mohammed and Adams, Bram and Hindle, Abram},
    year = {2016},
    month = {05},
    pages = {225-236},
    title = {Energy profiles of Java collections classes},
    doi = {10.1145/2884781.2884869}
}

@inproceedings{petra,
    author = {Di Nucci, Dario and Palomba, Fabio and Prota, Antonio and Panichella, Annibale and Zaidman, Andy and Lucia, Andrea},
    year = {2017},
    month = {05},
    pages = {},
    title = {PETrA: A Software-Based Tool for Estimating the Energy Profile of Android Applications},
    doi = {10.1109/ICSE-C.2017.18}
}

@article{ontheimpact,
    author = {Palomba, Fabio and Di Nucci, Dario and Panichella, Annibale and Zaidman, Andy and Lucia, Andrea},
    year = {2018},
    month = {09},
    pages = {},
    title = {On the Impact of Code Smells on the Energy Consumption of Mobile Applications},
    journal = {Information and Software Technology},
    doi = {10.1016/j.infsof.2018.08.004}
}

@inproceedings{atoolsupported,
    author = {Reimann, Jan and Brylski, Martin and Assmann, Uwe},
    year = {2014},
    month = {01},
    pages = {},
    title = {A Tool-Supported Quality Smell Catalogue For Android Developers}
}

@INPROCEEDINGS{aDoctor,
    author={F. {Palomba} and D. {Di Nucci} and A. {Panichella} and A. {Zaidman} and A. {De Lucia}},
    booktitle={2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)},
    title={Lightweight detection of Android-specific code smells: The aDoctor project},
    year={2017},
    volume={},
    number={},
    pages={487-491},
    keywords={Android (operating system);mobile computing;programming;software engineering;source code (software);lightweight detection;Android-specific code smells;aDoctor project;poor design solution symptoms;programmers;software system development;Mobile app code smells;maintainability;Android applications;Androids;Humanoid robots;Detectors;Context;Mobile communication;Instruction sets;Android-specific Code Smells;Detection Tool;Empirical Study},
    doi={10.1109/SANER.2017.7884659},
    ISSN={null},
    month={Feb},
}

@INPROCEEDINGS{empirical_performance,
    author={G. {Hecht} and N. {Moha} and R. {Rouvoy}},
    booktitle={2016 IEEE/ACM International Conference on Mobile Software Engineering and Systems (MOBILESoft)},
    title={An Empirical Study of the Performance Impacts of Android Code Smells},
    year={2016},
    volume={},
    number={},
    pages={59-69},
    keywords={Android (operating system);mobile computing;public domain software;smart phones;software engineering;user interfaces;Android code smell;Android applications;software quality;mobile app development;mobile devices;internal getter/setter;member ignoring method;HashMap usage;open source Android apps;Paprika toolkit;UI evaluation;frame time;delayed frame number;memory usage;garbage collection calls;Androids;Humanoid robots;Mobile communication;Performance evaluation;Software quality;Gettering;Android;code smells;metrics;mobile computing;performance},
    doi={10.1109/MobileSoft.2016.030},
    ISSN={null},
    month={May}
}

@article{perception,
    author = {Palomba, Fabio and Bavota, Gabriele and Di Penta, Massimiliano and Oliveto, Rocco and Lucia, Andrea},
    year = {2014},
    month = {12},
    pages = {101-110},
    title = {Do They Really Smell Bad? A Study on Developers' Perception of Bad Code Smells},
    journal = {Proceedings - 30th International Conference on Software Maintenance and Evolution, ICSME 2014},
    doi = {10.1109/ICSME.2014.32}
}

@inproceedings{refactoring_induce_bugs,
    author = {Bavota, Gabriele and De Carluccio, Bernardino and De Lucia, Andrea and Di Penta, Massimiliano and Oliveto, Rocco and Strollo, Orazio},
    title = {When Does a Refactoring Induce Bugs? An Empirical Study},
    booktitle = {Proceedings of the 2012 IEEE 12th International Working Conference on Source Code Analysis and Manipulation},
    series = {SCAM '12},
    year = {2012},
    isbn = {978-0-7695-4783-1},
    pages = {104--113},
    numpages = {10},
    url = {https://doi.org/10.1109/SCAM.2012.20},
    doi = {10.1109/SCAM.2012.20},
    acmid = {2477400},
    publisher = {IEEE Computer Society},
    address = {Washington, DC, USA},
    keywords = {Empirical Studies, Fault-inducing changes, Mining software repositories, Refactoring},
} 

@ARTICLE{refactoring_challenges,
    author={M. {Kim} and T. {Zimmermann} and N. {Nagappan}},
    journal={IEEE Transactions on Software Engineering},
    title={An Empirical Study of RefactoringChallenges and Benefits at Microsoft},
    year={2014},
    volume={40},
    number={7},
    pages={633-649},
    keywords={data analysis;software maintenance;software metrics;software quality;refactoring challenges;refactoring benefits;Microsoft;software quality improvement;survey;semi-structured interviews;quantitative Windows 7 version history data analysis;intermodule dependencies;complexity measures;software evolution;Computer bugs;Software;Interviews;History;Complexity theory;Size measurement;Software metrics;Refactoring;empirical study;software evolution;component dependencies;defects;churn},
    doi={10.1109/TSE.2014.2318734},
    ISSN={2326-3881},
    month={July},
}

@book{fowler,
    added-at = {2007-09-26T23:42:13.000+0200},
    address = {Boston, MA, USA},
    author = {Fowler, Martin},
    biburl = {https://www.bibsonomy.org/bibtex/27151885e8b8528651e048242f3527132/kimmens},
    description = {AOEvolutionchapter short paper},
    interhash = {955b704413985c65e6a0ba497d70b00e},
    intrahash = {7151885e8b8528651e048242f3527132},
    isbn = {0-201-48567-2},
    keywords = {evolution refactoring software},
    publisher = {Addison-Wesley},
    timestamp = {2007-09-26T23:42:13.000+0200},
    title = {Refactoring: Improving the Design of Existing Code},
    year = 1999
}

@inproceedings{code_smell,
    author = {Khomh, Foutse and Di Penta, Massimiliano and Guéhéneuc, Yann-Gaël},
    year = {2009},
    month = {01},
    pages = {75-84},
    title = {An Exploratory Study of the Impact of Code Smells on Software Change-proneness},
    journal = {Proceedings - Working Conference on Reverse Engineering, WCRE},
    doi = {10.1109/WCRE.2009.28}
}

@article{antipattern,
    author = {Khomh, Foutse and Di Penta, Massimiliano and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano},
    year = {2012},
    month = {06},
    pages = {243-275},
    title = {An exploratory study of the impact of antipatterns on class change- and fault-proneness},
    volume = {17},
    journal = {Empirical Software Engineering},
    doi = {10.1007/s10664-011-9171-y}
}

@INPROCEEDINGS{when_why,
    author={M. {Tufano} and F. {Palomba} and G. {Bavota} and R. {Oliveto} and M. {Di Penta} and A. {De Lucia} and D. {Poshyvanyk}},
    booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
    title={When and Why Your Code Starts to Smell Bad},
    year={2015},
    volume={1},
    number={},
    pages={403-414},
    keywords={recommender systems;software maintenance;software quality;technical debt management;code quality;software ecosystems;smell-introducing commits identification;recommendation systems;smell refactoring activities;Measurement;Software;Ecosystems;History;Androids;Humanoid robots;Maintenance engineering;bad code smells;mining software repositories;empirical study},
    doi={10.1109/ICSE.2015.59},
    ISSN={1558-1225},
    month={May}
}

@inproceedings{energy,
    author={D. {Di Nucci} and F. {Palomba} and A. {Prota} and A. {Panichella} and A. {Zaidman} and A. {De Lucia}},
    booktitle={2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)},
    title={Software-based energy profiling of Android apps: Simple, efficient and reliable?},
    year={2017},
    volume={},
    number={},
    pages={103-114},
    keywords={green computing;mobile computing;software-based energy profiling;Android apps;PETRA;hardware-based MONSOON toolkit;mean relative error;Hardware;Energy consumption;Mobile communication;Energy measurement;Androids;Humanoid robots;Estimation;Energy Consumption;Mobile Apps;Estimation},
    doi={10.1109/SANER.2017.7884613},
    ISSN={},
    month={Feb},
}

@online{sparse_array,
  author = {Google},
  title = {SparseArray},
  year = {2019},
  url = {https://developer.android.com/reference/android/util/SparseArray},
  urldate = {2019-12-03}
}

@inproceedings{Habchi:2019:SAC:3340730.3340749,
 author = {Habchi, Sarra and Rouvoy, Romain and Moha, Naouel},
 title = {On the Survival of Android Code Smells in the Wild},
 booktitle = {Proceedings of the 6th International Conference on Mobile Software Engineering and Systems},
 series = {MOBILESoft '19},
 year = {2019},
 location = {Montreal, Quebec, Canada},
 pages = {87--98},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=3340730.3340749},
 acmid = {3340749},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Android, code smells, mobile apps},
} 

@INPROCEEDINGS{api_update,
author={T. {McDonnell} and B. {Ray} and M. {Kim}},
booktitle={2013 IEEE International Conference on Software Maintenance},
title={An Empirical Study of API Stability and Adoption in the Android Ecosystem},
year={2013},
volume={},
number={},
pages={70-79},
keywords={application program interfaces;mobile computing;operating systems (computers);software maintenance;API usage adaptation code;github;version history data;Android API coevolution behavior;software ecosystems;API evolution;Android ecosystem;API stability;Androids;Humanoid robots;Smart phones;Google;Mobile communication;Software;History},
doi={10.1109/ICSM.2013.18},
ISSN={1063-6773},
month={Sep.},
}