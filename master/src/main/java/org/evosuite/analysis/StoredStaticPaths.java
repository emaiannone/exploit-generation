package org.evosuite.analysis;

import org.evosuite.utils.StaticPath;

import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;

public class StoredStaticPaths {
    private static final Map<String, Map<String, Set<StaticPath>>> staticPathsToTarget = new LinkedHashMap<>();

    public static void addAllIfNotExists(Set<StaticPath> newStaticPaths) {
        for (StaticPath newStaticPath : newStaticPaths) {
            String className = newStaticPath.getFinalNode().getClassName();
            String methodName = newStaticPath.getFinalNode().getMethodName();
            Map<String, Set<StaticPath>> staticPathsToClass = staticPathsToTarget.get(className);
            if (staticPathsToClass == null) {
                Map<String, Set<StaticPath>> staticPathsToMethod = new LinkedHashMap<>();
                staticPathsToMethod.put(methodName, newStaticPaths);
                staticPathsToTarget.put(className, staticPathsToMethod);
            }
            if (staticPathsToClass != null && !staticPathsToClass.containsKey(methodName)) {
                staticPathsToClass.put(methodName, newStaticPaths);
            }
        }
    }

    public static Set<StaticPath> getPathsToTarget(String targetClass, String targetMethod) {
        Map<String, Set<StaticPath>> staticPathsToClass = staticPathsToTarget.get(targetClass);
        if (staticPathsToClass != null && staticPathsToClass.containsKey(targetMethod)) {
            return staticPathsToClass.get(targetMethod);
        }
        return new LinkedHashSet<>();
    }

    public void clear() {
        staticPathsToTarget.clear();
    }
}
